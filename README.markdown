# Broken Todo App

This project is a Todo app, wherein a user can manage projects and items, track their completion, and generate reports. The app has some bugs and some missing features. Your task is to fix the bugs and implement the features as described below. Feel free to improve the application in any other way you see fit along the way. You are welcome to add new gem dependencies to the project.

Spend as much time as you want, but keep in mind that your solution should represent the best work you can do.

## Required work

Please try your best to complete all of the work in this section.

The specs are currently all green and should still be green when you are finished.

1. (Bug) Creating todo items is currently broken.

1. (Bug) Projects with the same title should not be allowed.

1. (Bug) When the option to clear completed items is clicked and there are no completed items, the message should not say `Completed items were successfully cleared.` but instead `There are no completed items for this project.`

1. (Enhancement) Add a column for "Date Added" to the report generated by `rake todo:reports:csv`. Use the Item's `created_at` attribute for this column.

1. (Enhancement) Switch to "soft" deletes of projects and items. That is, deleted records should be hidden from the UI but still present in the database.

1. (Enhancement) The UI is a mess. Try to clean it up a bit and make it consistent.

1. (Security) Add the necessary tools (to the Gemfile if they are Ruby-based) to help you understand and analyze the code from a security perspective. Remediate any issues you find.

1. (Enhancement) Add a rake task that outputs all projects and their todo items to the command line, in a human-readable format like:
   
   >```
   >  Project One
   >  - [X] Todo Item 1
   >  - [ ] Todo Item 2
   >  - [ ] Todo Item 3
   >
   >  Project Two
   >  - [ ] Todo Item 1
   >```

## Optional work

Complete any of the work in this section, if you choose. You may also implement other changes that you feel would demonstrate your ability.

1. Create an API endpoint at `/api/projects` that lists all projects and their associated items, in a JSON:API format.  Project attributes should include `title`.  Item attributes should include `description`, `done`.

1. Extend the API for full CRUD support on Projects and Items.

1. Refactor the UI so that creating new projects or adding new project items does not require a page reload/refresh.

1. As a user, when I visit the projects index page, then there should be a hyperlink that allows me to download the completed items CSV.

1. As a user, when I visit the project show page for a given project, then I should see a hyperlink to export that project and its items, and I should be able to choose whether the export includes all items, completed items, or not completed items.

## Setup

The app should run on any modern version of Ruby, with Bundler.

```sh
bundle install

rails db:create

rails db:migrate

yarn install

yarn build && yarn build:css

bundle exec rails server

For development to watch changes just run below command
bin/dev

# browse to localhost:3000

bundle exec rspec
```

Alternatively, you can use docker-compose:

```sh
docker compose build

docker compose up
# browse to localhost:3000

docker compose exec web rspec
```

## If you have questions

Ask the engineering manager you've been in contact with. This exercise is meant to give you an opportunity to show us your workâ€”we don't want you to struggle with administrative issues like unclear requirements. Agile software development welcomes stakeholder collaboration!
